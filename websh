#!/bin/bash

TMPDIR="$(mktemp -d)"

usage(){
  cat << 'USG' >&2
websh

Description:
  websh(https://websh.jiro4989.com/) on Bash

Usage:
  $ websh <cmd>

Requirement:
  jq, curl, GNU sed
USG
  exit 0
}

check_jq(){
  which jq > /dev/null 2> /dev/null || {
    echo 'please install jq command' >&2 && exit 1
  }
}

check_curl(){
  which curl > /dev/null 2> /dev/null || {
    echo 'please install curl command' >&2 && exit 1
  }
}

check_sed(){
  sed --help |& grep -q '\-z' || {
    echo 'please install GNU sed command' >&2 && exit 1
  }
}

websh_post(){
  curl -s https://websh.jiro4989.com/api/shellgei \
       -X POST -H "Content-Type: application/json" \
       -d "{\"code\":\"${*}\", \"images\":[]}"
}

get_req(){
  echo -e "$(cat - | jq -r '
    [
      "\\e[42mstdout:\\e[m",
      .stdout,
      "\\e[41mstderr:\\e[m",
      .stderr,
      "\\e[45mimages:\\e[m",
      (if .images == [] then "(none)" else (
        .images[] | [.image, (.filesize|tostring), .format] | join(" ")
      ) end),
      "\\e[30;47m[status: " + (.status|tostring) +
      ", time: " + (.elapsed_time|sub("milsec";" ms")) + "]\\e[m"
    ] | join("\n")
  ')"
}

main(){
  [ $# -eq 0 ] && usage
  check_jq && check_curl && check_sed
  websh_post "$@" | get_req > "${TMPDIR}/res"
  if [[ -z "$(sed -nrz 's/.*\x1b\[45mimages:\x1b\[m\n\((none)\).*/\1/p' "${TMPDIR}/res")" ]]
  then
    (
      sed -rnz 's/.*(\x1b\[45mimages:\x1b\[m\n)(.*)(\x1b\[30;47m).*/\2/p' "${TMPDIR}/res" |
      while read -r a b c;do
        local i
        local path="$TMPDIR/$((i++)).$c"
        echo "$a" | base64 -d > "$path"
        echo "(path: ${path}, size: ${b} byte)"
      done
    ) > "${TMPDIR}/a"
    sed -rz "s_(.*)(\x1b\[45mimages:\x1b\[m\n)(.*)(\x1b\[30;47m)(.*)_\1\2$(sed -z 's/\n/\\n/g' "${TMPDIR}/a")\4\5_" "$TMPDIR/res"
  else
    cat "${TMPDIR}/res"
  fi
}

main "$@"
exit "$?"
